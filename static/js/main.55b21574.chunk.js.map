{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","e","keyUpHandler","removeEventListener","this","event","setState","key","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAAD,OAAO,EAAKC,aAAaD,QANhE,kCASE,WACEF,SAASI,oBAAoB,QAASC,KAAKF,gBAV/C,0BAaE,SAAaG,GACXD,KAAKE,SAAS,CAAER,WAAYO,EAAME,QAdtC,oBAiBE,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIJ,KAAKP,MAAMC,WAAX,kCAC+BM,KAAKP,MAAMC,YACtC,kCAxBhB,GAAyBW,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAb,SAASc,eAAe,W","file":"static/js/main.55b21574.chunk.js","sourcesContent":["import React from 'react';\n\ntype AppProps = {};\n\ntype AppState = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<AppProps, AppState> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (e) => this.keyUpHandler(e));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyUpHandler);\n  }\n\n  keyUpHandler(event: KeyboardEvent) {\n    this.setState({ pressedKey: event.key });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            this.state.pressedKey\n              ? `The last pressed key is ${this.state.pressedKey}`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}